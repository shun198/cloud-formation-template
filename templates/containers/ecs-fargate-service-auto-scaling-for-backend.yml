AWSTemplateFormatVersion: 2010-09-09
Description: "ECS Fargate Service Auto Scaling Stack"

# -------------------------------------
# Metadata
# -------------------------------------
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: "ECS Auto Scaling Configuration"
        Parameters:
          - TargetECSClusterName
          - TargetECSServiceName
          - ServiceScaleEvaluationPeriods
          - ServiceCPUScaleOutThreshold
          - ServiceCPUScaleInThreshold
          - TaskMinContainerCount
          - TaskMaxContainerCount

# -------------------------------------
# Parameters
# -------------------------------------
Parameters:
  ProjectName:
    Description: "Enter the project name (ex: my-project)"
    Type: String
    MinLength: 1
    ConstraintDescription: "ProjectName must be enter"
    Default: my-project
  Environment:
    Description: "Select the environment"
    Type: String
    AllowedValues:
      - dev
      - stg
      - prd
  TargetECSClusterName:
    Description: "Enter the ECS cluster name for CloudWatch monitoring (ex: my-project-dev-cluster)"
    Type: String
  TargetECSServiceName:
    Description: "Enter the ECS service name for CloudWatch monitoring (ex: my-project-dev-service)"
    Type: String
  ServiceScaleEvaluationPeriods:
    Description: "The number of periods over which data is compared to the specified threshold"
    Type: Number
    Default: 1
    MinValue: 1
  ServiceCPUScaleOutThreshold:
    Type: Number
    Description: "Average CPU value to trigger auto scaling out"
    Default: 50
    MinValue: 0
    MaxValue: 100
    ConstraintDescription: "ServiceCPUScaleOutThreshold must be between 0 and 100"
  ServiceCPUScaleInThreshold:
    Type: Number
    Description: "Average CPU value to trigger auto scaling in"
    Default: 30
    MinValue: 0
    MaxValue: 100
    ConstraintDescription: "ServiceCPUScaleInThreshold must be between 0 and 100"
  TaskMinContainerCount:
    Type: Number
    Description: "Minimum number of containers to run for the service"
    Default: 1
    MinValue: 1
    ConstraintDescription: "TaskMinContainerCount must be at least one"
  TaskMaxContainerCount:
    Type: Number
    Description: "Maximum number of containers to run for the service when auto scaling out"
    Default: 2
    MinValue: 1
    ConstraintDescription: "TaskMaxContainerCount must be at least one"

# -------------------------------------
# Resources
# -------------------------------------
Resources:
  # -------------------------------------
  # ECS Service Auto Scaling
  # -------------------------------------
  ServiceAutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ECSServiceAutoScalingRoleForBackend-${ProjectName}-${Environment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Path: /service-role/
      Policies:
        - PolicyName: !Sub ECSServiceAutoScalingRoleAccessForBackend-${ProjectName}-${Environment}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - application-autoscaling:*
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - ecs:DescribeServices
                  - ecs:UpdateService
                Resource: "*"

  ServiceScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !Ref TaskMinContainerCount
      MaxCapacity: !Ref TaskMaxContainerCount
      ResourceId: !Sub service/${TargetECSClusterName}/${TargetECSServiceName}
      RoleARN: !GetAtt ServiceAutoScalingRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ServiceScaleOutPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSServiceScaleOutPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ServiceScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - ScalingAdjustment: 1
            MetricIntervalLowerBound: 0

  ServiceScaleInPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSServiceScaleInPolicy
      PolicyType: StepScaling
      ScalingTargetId: !Ref ServiceScalingTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: ChangeInCapacity
        Cooldown: 60
        MetricAggregationType: Average
        StepAdjustments:
          - ScalingAdjustment: -1
            MetricIntervalUpperBound: 0

  ServiceScaleOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${TargetECSServiceName}_ScaleOutAlarm
      EvaluationPeriods: !Ref ServiceScaleEvaluationPeriods
      Statistic: Average
      TreatMissingData: notBreaching
      Threshold: !Ref ServiceCPUScaleOutThreshold
      AlarmDescription: !Sub CPU 使用率が上昇したため、ECS サービス ${TargetECSServiceName} のスケールアウトを実行
      Period: 60
      AlarmActions:
        - !Ref ServiceScaleOutPolicy
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref TargetECSClusterName
        - Name: ServiceName
          Value: !Ref TargetECSServiceName
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization

  ServiceScaleInAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${TargetECSServiceName}_ScaleInAlarm
      EvaluationPeriods: !Ref ServiceScaleEvaluationPeriods
      Statistic: Average
      TreatMissingData: notBreaching
      Threshold: !Ref ServiceCPUScaleInThreshold
      AlarmDescription: !Sub CPU 使用率が低下したため、ECS サービス ${TargetECSServiceName} のスケールインを実行
      Period: 300
      AlarmActions:
        - !Ref ServiceScaleInPolicy
      Namespace: AWS/ECS
      Dimensions:
        - Name: ClusterName
          Value: !Ref TargetECSClusterName
        - Name: ServiceName
          Value: !Ref TargetECSServiceName
      ComparisonOperator: LessThanThreshold
      MetricName: CPUUtilization
