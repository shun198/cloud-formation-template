AWSTemplateFormatVersion: 2010-09-09
Description: "CloudFront Stack"

# -------------------------------------
# Mappings
# -------------------------------------
Mappings:
  CachePolicyIds:
    CachingOptimized:
      Id: 658327ea-f89d-4fab-a63d-7e88639e58f6
    CachingDisabled:
      Id: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
    CachingOptimizedForUncompressedObjects:
      Id: b2884449-e4de-46a7-ac36-70bc7f1ddd6d
    Elemental-MediaPackage:
      Id: 08627262-05a9-4f76-9ded-b50ca2e3a84f
    Amplify:
      Id: 2e54312d-136d-493c-8eb9-b001f22f67d2
  ResponseHeadersPolicyIds:
    CORS-and-SecurityHeadersPolicy:
      Id: e61eb60c-9c35-4d20-a928-2b84e02af89c
    CORS-With-Preflight:
      Id: 5cc3b908-e619-4b99-88e5-2cf7f45965bd
    CORS-with-preflight-and-SecurityHeadersPolicy:
      Id: eaab4381-ed33-4a86-88ca-d9558dc6cd63
    SecurityHeadersPolicy:
      Id: 67f7725c-6f97-4210-82d7-5512b31e9d03
    SimpleCORS:
      Id: 60669652-455b-4ae9-85a4-c4c02393f86c

# -------------------------------------
# Metadata
# -------------------------------------
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: "Route 53 Configuration"
        Parameters:
          - HostZoneID
          - DomainName
      - Label:
          default: "CloudFront Configuration"
        Parameters:
          - ACMPublicCertificateArn
          - AmplifyURL
          - AuthHeaderValue
          - CachePolicy
          - ResponseHeadersPolicy
          - WebACLArn

# -------------------------------------
# Parameters
# -------------------------------------
Parameters:
  ProjectName:
    Description: "Enter the project name (ex: my-project)"
    Type: String
    MinLength: 1
    ConstraintDescription: "ProjectName must be enter"
    Default: my-project
  Environment:
    Description: "Select the environment"
    Type: String
    AllowedValues:
      - dev
      - stg
      - prd
    ConstraintDescription: "Environment must be select"
  HostZoneID:
    Description: "Select the Route 53 hosted zone ID"
    Type: AWS::Route53::HostedZone::Id
  DomainName:
    Description: "Enter the CloudFront domain name used for alias record (ex: shun-practice.com)"
    Type: String
  ACMPublicCertificateArn:
    Description: "Enter the ACM public certificate ARN for global region"
    Type: String
  AmplifyURL:
    Description: "Enter the Amplify URL. (ex: develop.xxxxx.amplifyapp.com)"
    Type: String
  AuthHeaderValue:
    Description: "Enter the encoded Amplify basic auth credentials"
    Type: String
  CachePolicy:
    Description: "Select the CloudFront cache policy"
    Type: String
    Default: CachingDisabled
    AllowedValues:
      - CachingOptimized
      - CachingDisabled
      - CachingOptimizedForUncompressedObjects
      - Elemental-MediaPackage
      - Amplify
  ResponseHeadersPolicy:
    Description: "Select the CloudFront response headers policy"
    Type: String
    Default: SecurityHeadersPolicy
    AllowedValues:
      - CORS-and-SecurityHeadersPolicy
      - CORS-With-Preflight
      - CORS-with-preflight-and-SecurityHeadersPolicy
      - SecurityHeadersPolicy
      - SimpleCORS
  WebACLArn:
    Description: "Enter the ARN of the WAFv2 to apply to CloudFront. (ex: arn:aws:wafv2:us-east-1:012345678910:global/webacl/example/xxxxx)"
    Type: String

# -------------------------------------
# Conditions
# -------------------------------------
Conditions:
  # WAFv2 の指定有無による条件
  NotEmptyWebACLArn: !Not [!Equals [!Ref WebACLArn, ""]]
  # デプロイ環境に応じた条件
  IsPrdEnv: !Equals [!Ref Environment, prd]

# -------------------------------------
# Resources
# -------------------------------------
Resources:
  # -------------------------------------
  # Route 53
  # -------------------------------------
  CloudFrontAliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostZoneID
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        # ref: https://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-route53.html#w4ab1c23c21c84c11
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt CloudFrontDistribution.DomainName
  # -------------------------------------
  # CloudFront Distribution
  # -------------------------------------
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - Id: Amplify
          DomainName: !Ref AmplifyURL
          CustomOriginConfig:
            OriginProtocolPolicy: https-only
            OriginSSLProtocols:
              - TLSv1.2
          OriginCustomHeaders:
            - HeaderName: Authorization
              HeaderValue: !Ref AuthHeaderValue
        Enabled: true
        Comment: "Amplify Hosting Distribution"
        DefaultCacheBehavior:
          # CachingOptimized
          CachePolicyId: !FindInMap [CachePolicyIds, !Ref CachePolicy , Id]
          # SecurityHeadersPolicy
          ResponseHeadersPolicyId: !FindInMap [ResponseHeadersPolicyIds, !Ref ResponseHeadersPolicy, Id]
          # Prd 環境の場合は CF2 (CloudFront Function) を使用しない (Basic 認証)
          FunctionAssociations:
            - !If
              - IsPrdEnv
              - !Ref AWS::NoValue
              - EventType: viewer-request
                FunctionARN: !Ref CloudFrontFunctionForBasicAuth
          TargetOriginId: Amplify
          ViewerProtocolPolicy: redirect-to-https
        HttpVersion: http2
        ViewerCertificate:
          AcmCertificateArn: !Ref ACMPublicCertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        Aliases:
          - !Ref DomainName
        IPV6Enabled: false
        WebACLId: !If
          - NotEmptyWebACLArn
          - !Ref WebACLArn
          - !Ref AWS::NoValue
        Logging:
          Bucket: !GetAtt AccessLogsStorageBucket.RegionalDomainName
          IncludeCookies: false
          Prefix: cloudfront/

  # -------------------------------------
  # CloudFront Function
  # -------------------------------------
  CloudFrontFunctionForBasicAuth:
    Type: AWS::CloudFront::Function
    Properties:
      AutoPublish: true
      FunctionCode: |-
        function handler(event) {
          var request = event.request;
          var headers = request.headers;

          // echo -n user:pass | base64
          var authString = "Basic YWlmdWw6ODUxNWFm";

          if (
            typeof headers.authorization === "undefined" ||
            headers.authorization.value !== authString
          ) {
            return {
              statusCode: 401,
              statusDescription: "Unauthorized",
              headers: {"www-authenticate": {value: "Basic"}}
            };
          }

          return request;
        }
      FunctionConfig:
        Comment: "This function for Basic Authorization"
        Runtime: cloudfront-js-1.0
      Name: !Sub ${ProjectName}-${Environment}-BasicAuth

  # -------------------------------------
  # S3 Bucket
  # -------------------------------------
  # For CloudFront Access Logs Bucket
  AccessLogsStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${ProjectName}-${Environment}-cloudfront-access-logs
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: TransitionToGlacierAfter365Days
            Status: Enabled
            Transitions:
              - TransitionInDays: 365
                StorageClass: GLACIER
          - Id: ExpireAfter5Years
            Status: Enabled
            ExpirationInDays: 1825

  # -------------------------------------
  # S3 Bucket Policy
  # -------------------------------------
  # For CloudFront Access Logs Bucket Policy
  AccessLogsBucketPolicy:
    DependsOn: AccessLogsStorageBucket
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AccessLogsStorageBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub arn:aws:s3:::${AccessLogsStorageBucket}/*
              - !GetAtt AccessLogsStorageBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

# -------------------------------------
# Outputs
# -------------------------------------
Outputs:
  CloudFrontDistributionID:
    Value: !Ref CloudFrontDistribution
  AccessLogsStorageBucketName:
    Value: !Ref AccessLogsStorageBucket
  AccessLogsStorageBucketArn:
    Value: !GetAtt AccessLogsStorageBucket.Arn
  AccessLogsStorageBucketDomainName:
    Value: !GetAtt AccessLogsStorageBucket.RegionalDomainName
