AWSTemplateFormatVersion: 2010-09-09
Description: "VPC Stack"

# -------------------------------------
# Metadata
# -------------------------------------
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project Configuration"
        Parameters:
          - ProjectName
          - Environment
      - Label:
          default: "VPC Configuration"
        Parameters:
          - AvailabilityZone1
          - AvailabilityZone2
          - VPCCIDR
          - ALBPublicSubnet1CIDR
          - ALBPublicSubnet2CIDR
          - NATGatewayPublicSubnet1CIDR
          - NATGatewayPublicSubnet2CIDR
          - ECSProtectedSubnet1CIDR
          - ECSProtectedSubnet2CIDR
          - LambdaProtectedSubnet1CIDR
          - LambdaProtectedSubnet2CIDR
          - InternalALBPrivateSubnet1CIDR
          - InternalALBPrivateSubnet2CIDR
          - RDSPrivateSubnet1CIDR
          - RDSPrivateSubnet2CIDR
          - VPCFlowLogsRetentionInDays

# -------------------------------------
# Parameters
# -------------------------------------
Parameters:
  ProjectName:
    Description: "Enter the project name (ex: my-project)"
    Type: String
    MinLength: 1
    ConstraintDescription: "ProjectName must be enter"
    Default: my-project
  Environment:
    Description: "Select the environment"
    Type: String
    AllowedValues:
      - dev
      - stg
      - prd
    ConstraintDescription: "Environment must be select"
  AvailabilityZone1:
    Description: "Enter the 1st Availability Zone name"
    Type: String
    Default: ap-northeast-1a
  AvailabilityZone2:
    Description: "Enter the 2nd Availability Zone name"
    Type: String
    Default: ap-northeast-1c
  VPCCIDR:
    Description: "Enter the VPC CIDR block"
    Type: String
  ALBPublicSubnet1CIDR:
    Description: "Enter the Subnet CIDR block for ALB in the 1st Availability Zone"
    Type: String
  ALBPublicSubnet2CIDR:
    Description: "Enter the Subnet CIDR block for ALB in the 2nd Availability Zone"
    Type: String
  NATGatewayPublicSubnet1CIDR:
    Description: "Enter the Subnet CIDR block for NAT Gateway in the 1st Availability Zone"
    Type: String
  NATGatewayPublicSubnet2CIDR:
    Description: "Enter the Subnet CIDR block for NAT Gateway in the 2nd Availability Zone"
    Type: String
  ECSProtectedSubnet1CIDR:
    Description: "Enter the Subnet CIDR block for ECS in the 1st Availability Zone"
    Type: String
  ECSProtectedSubnet2CIDR:
    Description: "Enter the Subnet CIDR block for ECS in the 2nd Availability Zone"
    Type: String
  LambdaProtectedSubnet1CIDR:
    Description: "Enter the Subnet CIDR block for Lambda in the 1st Availability Zone"
    Type: String
  LambdaProtectedSubnet2CIDR:
    Description: "Enter the Subnet CIDR block for Lambda in the 2nd Availability Zone"
    Type: String
  InternalALBPrivateSubnet1CIDR:
    Description: "Enter the Subnet CIDR block for Internal ALB in the 1st Availability Zone"
    Type: String
  InternalALBPrivateSubnet2CIDR:
    Description: "Enter the Subnet CIDR block for Internal ALB in the 2nd Availability Zone"
    Type: String
  RDSPrivateSubnet1CIDR:
    Description: "Enter the Subnet CIDR block for RDS in the 1st Availability Zone"
    Type: String
  RDSPrivateSubnet2CIDR:
    Description: "Enter the Subnet CIDR block for RDS in the 2nd Availability Zone"
    Type: String
  VPCFlowLogsRetentionInDays:
    Description: "Enter the data retention for VPC FlowLogs with CW Logs (ex: 30)"
    Type: Number

# -------------------------------------
# Conditions
# -------------------------------------
Conditions:
  IsPrdEnv: !Equals [!Ref Environment, prd]

# -------------------------------------
# Resources
# -------------------------------------
Resources:
  # -------------------------------------
  # VPC
  # -------------------------------------
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-vpc
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-igw
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # -------------------------------------
  # VPC FlowLogs
  # -------------------------------------
  # For CW Logs
  VPCFlowLogToCWLog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !GetAtt VPCFlowLogsRoleForCWLogs.Arn
      LogDestinationType: cloud-watch-logs
      LogGroupName: !Ref VPCFlowLogGroup
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
  VPCFlowLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vpc/flowlogs/${ProjectName}-${Environment}-vpc
      RetentionInDays: !Ref VPCFlowLogsRetentionInDays
  VPCFlowLogsRoleForCWLogs:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub VPCFlowLogsRoleForCWLogs-${ProjectName}-${Environment}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - vpc-flow-logs.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub VPCFlowLogsRoleAccessForCWLogs-${ProjectName}-${Environment}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vpc/flowlogs/${ProjectName}-${Environment}-vpc:*

  # For S3
  VPCFlowLogToS3:
    DependsOn: VPCFlowLogBucket
    Type: AWS::EC2::FlowLog
    Properties:
      LogDestinationType: s3
      LogDestination: !GetAtt VPCFlowLogBucket.Arn
      ResourceId: !Ref VPC
      ResourceType: VPC
      TrafficType: ALL
  VPCFlowLogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-${Environment}-vpc-flowlogs
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: TransitionToGlacierAfter365Days
            Status: Enabled
            Transitions:
              - TransitionInDays: 365
                StorageClass: GLACIER
          - Id: ExpireAfter5Years
            Status: Enabled
            ExpirationInDays: 1825

  # -------------------------------------
  # Public Subnets
  # -------------------------------------
  # For ALB
  ALBPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref ALBPublicSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-pub-alb-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-pub-alb"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  ALBPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref ALBPublicSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-pub-alb-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-pub-alb"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  # For NAT Gateway
  NATGatewayPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref NATGatewayPublicSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-pub-natgw-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-pub-natgw"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  NATGatewayPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref NATGatewayPublicSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-pub-natgw-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-pub-natgw"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # -------------------------------------
  # Protected Subnets
  # -------------------------------------
  # For ECS
  ECSProtectedSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref ECSProtectedSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-prot-ecs-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-prot-ecs"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  ECSProtectedSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref ECSProtectedSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-prot-ecs-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-prot-ecs"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  # For Lambda
  LambdaProtectedSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref LambdaProtectedSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-prot-lambda-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-prot-lambda"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  LambdaProtectedSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref LambdaProtectedSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-prot-lambda-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-prot-lambda"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # -------------------------------------
  # Private Subnets
  # -------------------------------------
  # For Internal ALB
  InternalALBPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref InternalALBPrivateSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-priv-internal-alb-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-priv-internal-alb"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  InternalALBPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref InternalALBPrivateSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-priv-internal-alb-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-priv-internal-alb"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  # For RDS
  RDSPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref RDSPrivateSubnet1CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone1
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-priv-rds-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-priv-rds"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  RDSPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref RDSPrivateSubnet2CIDR
      VpcId: !Ref VPC
      AvailabilityZone: !Ref AvailabilityZone2
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          # output-image: my-project-dev-priv-rds-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-priv-rds"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

  # -------------------------------------
  # Public Route Tables
  # -------------------------------------
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-pub-rtb
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  # For ALB
  ALBPublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ALBPublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  ALBPublicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ALBPublicSubnet2
      RouteTableId: !Ref PublicRouteTable
  # For NAT Gateway
  NATGatewayPublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref NATGatewayPublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  NATGatewayPublicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref NATGatewayPublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # -------------------------------------
  # Protected Route Tables
  # -------------------------------------
  ProtectedRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          # output-image: my-project-dev-prot-rtb-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-prot-rtb"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  # For ECS
  ECSProtectedSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ECSProtectedSubnet1
      RouteTableId: !Ref ProtectedRouteTable1
  # For Lambda
  LambdaProtectedSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref LambdaProtectedSubnet1
      RouteTableId: !Ref ProtectedRouteTable1

  ProtectedRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          # output-image: my-project-dev-prot-rtb-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-prot-rtb"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  # For ECS
  ECSProtectedSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ECSProtectedSubnet2
      RouteTableId: !Ref ProtectedRouteTable2
  # For Lambda
  LambdaProtectedSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref LambdaProtectedSubnet2
      RouteTableId: !Ref ProtectedRouteTable2

  # -------------------------------------
  # Private Route Tables
  # -------------------------------------
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${Environment}-priv-rtb
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  # For Internal ALB
  InternalALBPrivateSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InternalALBPrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  InternalALBPrivateSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref InternalALBPrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable
  # For RDS
  RDSPrivateSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RDSPrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  RDSPrivateSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RDSPrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # -------------------------------------
  # NAT Gateway
  # -------------------------------------
  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP1.AllocationId
      SubnetId: !Ref NATGatewayPublicSubnet1
      Tags:
        - Key: Name
          # output-image: my-project-dev-natgw-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-natgw"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  NATGatewayEIP1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          # output-image: my-project-dev-natgw-eip-1a
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-natgw-eip"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone1]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  NATGateway2:
    Type: AWS::EC2::NatGateway
    Condition: IsPrdEnv
    Properties:
      AllocationId: !GetAtt NATGatewayEIP2.AllocationId
      SubnetId: !Ref NATGatewayPublicSubnet2
      Tags:
        - Key: Name
          # output-image: my-project-dev-natgw-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-natgw"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  NATGatewayEIP2:
    Type: AWS::EC2::EIP
    Condition: IsPrdEnv
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          # output-image: my-project-dev-natgw-eip-1c
          Value: !Join
            - "-"
            - - !Sub "${ProjectName}-${Environment}-natgw-eip"
              - !Select [0, !Split ["-", !Select [2, !Split ["-", !Ref AvailabilityZone2]]]]
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment
  NATGatewayAssociationForProtectedRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ProtectedRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
  NATGatewayAssociationForProtectedRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ProtectedRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !If
        - IsPrdEnv
        - !Ref NATGateway2
        - !Ref NATGateway1

  # -------------------------------------
  # Security Group
  # -------------------------------------
  # インバウンドポートを許可しないセキュリティグループ
  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: no-ingress-sg
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: no-ingress-sg
        - Key: ProjectName
          Value: !Ref ProjectName
        - Key: Environment
          Value: !Ref Environment

# -------------------------------------
# Outputs
# -------------------------------------
Outputs:
  VPCID:
    Description: "A reference to the created VPC ID"
    Value: !Ref VPC
  ALBPublicSubnet1:
    Description: "A reference to the public subnet in the 1st Availability Zone"
    Value: !Ref ALBPublicSubnet1
  ALBPublicSubnet2:
    Description: "A reference to the public subnet in the 2nd Availability Zone"
    Value: !Ref ALBPublicSubnet2
  NATGatewayPublicSubnet1:
    Description: "A reference to the public subnet in the 1st Availability Zone"
    Value: !Ref NATGatewayPublicSubnet1
  NATGatewayPublicSubnet2:
    Description: "A reference to the public subnet in the 2nd Availability Zone"
    Value: !Ref NATGatewayPublicSubnet2
  ECSProtectedSubnet1:
    Description: "A reference to the protected subnet in the 1st Availability Zone"
    Value: !Ref ECSProtectedSubnet1
  ECSProtectedSubnet2:
    Description: "A reference to the protected subnet in the 2nd Availability Zone"
    Value: !Ref ECSProtectedSubnet2
  LambdaProtectedSubnet1:
    Description: "A reference to the protected subnet in the 1st Availability Zone"
    Value: !Ref LambdaProtectedSubnet1
  LambdaProtectedSubnet2:
    Description: "A reference to the protected subnet in the 2nd Availability Zone"
    Value: !Ref LambdaProtectedSubnet2
  InternalALBPrivateSubnet1:
    Description: "A reference to the private subnet in the 1st Availability Zone."
    Value: !Ref InternalALBPrivateSubnet1
  InternalALBPrivateSubnet2:
    Description: "A reference to the private subnet in the 2nd Availability Zone."
    Value: !Ref InternalALBPrivateSubnet2
  RDSPrivateSubnet1:
    Description: "A reference to the private subnet in the 1st Availability Zone"
    Value: !Ref RDSPrivateSubnet1
  RDSPrivateSubnet2:
    Description: "A reference to the private subnet in the 2nd Availability Zone"
    Value: !Ref RDSPrivateSubnet2
  NoIngressSecurityGroup:
    Description: "Security group with no ingress rule"
    Value: !Ref NoIngressSecurityGroup
